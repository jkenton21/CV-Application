{"ast":null,"code":"import _slicedToArray from\"/Users/jkenton21/CV-Application/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Experience.js\n/* Experience component handles individual experience items for the CV*/import React,{useState}from\"react\";import Experience from\"./Experience\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExperienceForm=function ExperienceForm(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),company=_useState2[0],setCompany=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),location=_useState6[0],setLocation=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),jobStart=_useState8[0],setJobStart=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),jobEnd=_useState10[0],setJobEnd=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),responsibilities=_useState12[0],setResponsibilities=_useState12[1];var submitted=props.submitted;var id=props.id;var addJob=props.addJob;var cancelJob=props.cancelJob;return submitted===false?/*#__PURE__*/_jsxs(\"div\",{className:\"Experience form\",children:[/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title:\"}),/*#__PURE__*/_jsx(\"input\",{value:title,type:\"text\",id:\"title\",onChange:function onChange(e){return setTitle(e.target.value);},placeholder:\"Software Engineer\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"company\",children:\"Company:\"}),/*#__PURE__*/_jsx(\"input\",{value:company,type:\"text\",id:\"company\",onChange:function onChange(e){return setCompany(e.target.value);},placeholder:\"Some FAANG\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location\",children:\"Location:\"}),/*#__PURE__*/_jsx(\"input\",{value:location,type:\"text\",id:\"location\",onChange:function onChange(e){return setLocation(e.target.value);},placeholder:\"San Francisco, CA\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"jobStart\",children:\"Start Date:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobStart,type:\"text\",id:\"jobStart\",onChange:function onChange(e){return setJobStart(e.target.value);},placeholder:\"09/2019\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"end\",children:\"End Date:\"}),/*#__PURE__*/_jsx(\"input\",{value:jobEnd,type:\"text\",id:\"jobEnd\",onChange:function onChange(e){return setJobEnd(e.target.value);},placeholder:\"06/2021\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"responsibilities\",children:\"Job Responsibilities:\"}),/*#__PURE__*/_jsx(\"textarea\",{value:responsibilities,id:\"responsibilities\",onChange:function onChange(e){return setResponsibilities(e.target.value);},placeholder:\"Describe your job responsibilities\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:addJob,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus fa-lg\"}),\" Job\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return cancelJob(id);},children:[/*#__PURE__*/_jsx(\"i\",{className:\"far fa-trash-alt fa-lg\"}),\" Form\"]})]})]}):/*#__PURE__*/_jsx(Experience,{company:company,title:title,location:location,jobStart:jobStart,jobEnd:jobEnd,responsibilities:responsibilities});};export default ExperienceForm;","map":{"version":3,"sources":["/Users/jkenton21/CV-Application/src/components/Experience.js"],"names":["React","useState","Experience","ExperienceForm","props","company","setCompany","title","setTitle","location","setLocation","jobStart","setJobStart","jobEnd","setJobEnd","responsibilities","setResponsibilities","submitted","id","addJob","cancelJob","e","target","value"],"mappings":"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","sourcesContent":["// Experience.js\n/* Experience component handles individual experience items for the CV*/\n\nimport React, { useState } from \"react\";\nimport Experience from \"./Experience\";\n\nconst ExperienceForm = (props) => {\n  const [company, setCompany] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [jobStart, setJobStart] = useState(\"\");\n  const [jobEnd, setJobEnd] = useState(\"\");\n  const [responsibilities, setResponsibilities] = useState(\"\");\n\n  const submitted = props.submitted;\n  const id = props.id;\n  const addJob = props.addJob;\n  const cancelJob = props.cancelJob;\n  return submitted === false ? (\n    <div className=\"Experience form\">\n      <form>\n        <label htmlFor=\"title\">Title:</label>\n        <input\n          value={title}\n          type=\"text\"\n          id=\"title\"\n          onChange={(e) => setTitle(e.target.value)}\n          placeholder=\"Software Engineer\"\n        />\n        <label htmlFor=\"company\">Company:</label>\n        <input\n          value={company}\n          type=\"text\"\n          id=\"company\"\n          onChange={(e) => setCompany(e.target.value)}\n          placeholder=\"Some FAANG\"\n        />\n        <label htmlFor=\"location\">Location:</label>\n        <input\n          value={location}\n          type=\"text\"\n          id=\"location\"\n          onChange={(e) => setLocation(e.target.value)}\n          placeholder=\"San Francisco, CA\"\n        />\n        <label htmlFor=\"jobStart\">Start Date:</label>\n        <input\n          value={jobStart}\n          type=\"text\"\n          id=\"jobStart\"\n          onChange={(e) => setJobStart(e.target.value)}\n          placeholder=\"09/2019\"\n        />\n        <label htmlFor=\"end\">End Date:</label>\n        <input\n          value={jobEnd}\n          type=\"text\"\n          id=\"jobEnd\"\n          onChange={(e) => setJobEnd(e.target.value)}\n          placeholder=\"06/2021\"\n        />\n        <label htmlFor=\"responsibilities\">Job Responsibilities:</label>\n        <textarea\n          value={responsibilities}\n          id=\"responsibilities\"\n          onChange={(e) => setResponsibilities(e.target.value)}\n          placeholder=\"Describe your job responsibilities\"\n        />\n      </form>\n      <div className=\"btn-container\">\n        <button onClick={addJob}>\n          <i className=\"fas fa-plus fa-lg\"></i> Job\n        </button>\n        <button onClick={() => cancelJob(id)}>\n          <i className=\"far fa-trash-alt fa-lg\"></i> Form\n        </button>\n      </div>\n    </div>\n  ) : (\n    <Experience\n      company={company}\n      title={title}\n      location={location}\n      jobStart={jobStart}\n      jobEnd={jobEnd}\n      responsibilities={responsibilities}\n    />\n  );\n};\n\nexport default ExperienceForm;"]},"metadata":{},"sourceType":"module"}